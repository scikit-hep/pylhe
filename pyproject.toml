[build-system]
requires = [
    "hatchling>=1.13.0",
    "hatch-vcs>=0.3.0",
]
build-backend = "hatchling.build"

[project]
name = "pylhe"
dynamic = ["version"]
description = "A small package to get structured data out of Les Houches Event files"
readme = "README.md"
license = { text = "Apache-2.0" }  # SPDX short identifier
requires-python = ">=3.8"
authors = [
    { name = "Lukas Heinrich", email = "lukas.heinrich@cern.ch" },
    { name = "Matthew Feickert", email = "matthew.feickert@cern.ch" },
    { name = "Eduardo Rodrigues", email = "eduardo.rodrigues@cern.ch" },
    { name = "Alexander Puck Neuwirth", email = "a_neuw01@uni-muenster.de" },
]
maintainers = [ {name = "The Scikit-HEP admins", email = "scikit-hep-admins@googlegroups.com"} ]
keywords = [
    "lhe",
    "physics",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
    "awkward>=1.2.0",
    "graphviz>=0.12.0",
    "particle>=0.16",
    "vector>=0.8.1",
]

[project.optional-dependencies]
lint = [
    "ruff",
]
test = [
    "pydocstyle",
    "pytest-cov>=2.5.1",
    "pytest>=6.0",
    "scikit-hep-testdata>=0.4.36",
]
develop = [
    "pylhe[lint,test]",
    "pre-commit",
    "tbump>=6.7.0",
]

[project.urls]
Homepage = "https://github.com/scikit-hep/pylhe"
"Source Code" = "https://github.com/scikit-hep/pylhe"
"Issue Tracker" = "https://github.com/scikit-hep/pylhe/issues"
"Releases" = "https://github.com/scikit-hep/pylhe/releases"

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.hatch.build.hooks.vcs]
version-file = "src/pylhe/_version.py"

[tool.hatch.build.targets.sdist]
# hatchling always includes:
# pyproject.toml, .gitignore, any README, any LICENSE, AUTHORS
include = [
    "/src",
    "/tests",
    "/CITATION.cff",
]

[tool.hatch.build.targets.wheel]
packages = ["src/pylhe"]

[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "I",        # isort
  "ARG",      # flake8-unused-arguments
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "ICN",      # flake8-import-conventions
  "G",        # flake8-logging-format
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
  "EXE",      # flake8-executable
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "FURB",     # refurb
  "PYI",      # flake8-pyi
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
  "RUF012",   # TODO: mutable class attributes
  "SIM115",   # TODO: use context manager for opening files
]
