name: publish distributions
on:
  push:
    branches:
    - main
    tags:
    - v*
  pull_request:
    branches:
    - main
    - release/v*
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      publish:
        type: choice
        description: 'Publish to TestPyPI?'
        options:
        - false
        - true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Python distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install python-build, check-manifest, and twine
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install build check-manifest twine
        python -m pip list

    - name: Check MANIFEST
      run: |
        check-manifest

    - name: Build a sdist and a wheel
      run: |
        python -m build .

    - name: Verify history available for dev versions
      run: |
        wheel_name=$(find dist/ -iname "*.whl" -printf "%f\n")
        if [[ "${wheel_name}" == *"pylhe-0.1.dev"* ]]; then
          echo "python-build incorrectly named built distribution: ${wheel_name}"
          echo "python-build is lacking the history and tags required to determine version number"
          echo "intentionally erroring with 'return 1' now"
          return 1
        fi
        echo "python-build named built distribution: ${wheel_name}"

    - name: Verify the distribution
      run: twine check --strict dist/*

    - name: List contents of sdist
      run: python -m tarfile --list dist/pylhe-*.tar.gz

    - name: List contents of wheel
      run: python -m zipfile --list dist/pylhe-*.whl

    - name: Upload distribution artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist-artifact
        path: dist

  publish:
    name: Publish Python distribution to (Test)PyPI
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    # Mandatory for publishing with a trusted publisher
    # c.f. https://docs.pypi.org/trusted-publishers/using-a-publisher/
    permissions:
      id-token: write
    # Restrict to the environment set for the trusted publisher
    environment:
      name: publish-package

    steps:
    - name: Download distribution artifact
      uses: actions/download-artifact@v3
      with:
        name: dist-artifact
        path: dist

    - name: List all files
      run: ls -lh dist

    - name: Publish distribution ðŸ“¦ to Test PyPI
      # Publish to TestPyPI on tag events of if manually triggered
      # Compare to 'true' string as booleans get turned into strings in the console
      if: >-
        (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && github.repository == 'scikit-hep/pylhe')
        || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'true' && github.repository == 'scikit-hep/pylhe')
      uses: pypa/gh-action-pypi-publish@v1.8.7
      with:
        repository-url: https://test.pypi.org/legacy/
        print-hash: true

    - name: Publish distribution ðŸ“¦ to PyPI
      if: github.event_name == 'release' && github.event.action == 'published' && github.repository == 'scikit-hep/pylhe'
      uses: pypa/gh-action-pypi-publish@v1.8.7
      with:
        print-hash: true
